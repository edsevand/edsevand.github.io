<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Regresión Lineal on Eduardo's Blog</title><link>https://edsevand.github.io/posts/linreg/</link><description>Recent content in Regresión Lineal on Eduardo's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://edsevand.github.io/posts/linreg/index.xml" rel="self" type="application/rss+xml"/><item><title>Consideraciones iniciales: Regresión Lineal</title><link>https://edsevand.github.io/posts/linreg/linreg1/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://edsevand.github.io/posts/linreg/linreg1/</guid><description>- Visualización de datos Funciones como:
shape describe() info() permiten conocer dimensiones, estadísticas básicas y tipo/número de datos que contiene un dataset, para el mejor tratamiento de los datos faltantes y tener en consideración aquellos que no aportaran nada para el estudio a llevar a cabo.
- Correlación de datos En primera instancia, conocer como se correlacionan los datos permite de manera rápida visualizar cuan mejor puede ser un modelo seleccionando ciertas variables.</description></item><item><title>Regresión Lineal</title><link>https://edsevand.github.io/posts/linreg/linreg2/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://edsevand.github.io/posts/linreg/linreg2/</guid><description>¿Cuántas veces se comparte un artículo?
Se importan las siguientes librerías:
import pandas as pd import numpy as np import matplotlib.pyplot as plt import statsmodels.formula.api as smf import statsmodels.api as sm La librería statsmodel.formula.api permite crear y entrenar el modelo lineal.
lm = smf.ols(formula=&amp;#34;Sales~TV&amp;#34;, data = df).fit()</description></item></channel></rss>